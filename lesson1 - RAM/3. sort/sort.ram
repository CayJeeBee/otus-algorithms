<input> 3 2 1 3

; number of elements
read 1
load 1
jz DoNothing

; iterator (number of elements left to read)
store 2

; init address
load =10
store 3


ReadNextElement:
  ; read current element
  read *3

  ; allocate address for the next element
  load 3
  add =1
  store 3

  ; decrease number of elements left to read
  load 2
  sub =1
  store 2

jgtz ReadNextElement


load 3
store 4 ; i
sub =1
store 5 ; k

; get address of 1st element
sub 1
load 6

IterateByI:
  load 4
  sub =1
  store 4

  jmp IterateByK

  ReturnAfterIterateByK:

  NextI:
    load 4
    sub 6
    jgtz IterateByI
  jmp WriteOutput



IterateByK:
  load 5
  sub =1
  store 5


  load *4
  sub *5

  jgtz NextK

  ; swap elements
  load *5
  add *4
  store *4
  sub *5
  store *5
  load *4
  sub *5
  store *4

  NextK:
    load 5
    sub 6
    jgtz IterateByK
  jmp ReturnAfterIterateByK


WriteOutput:


DoNothing:

halt